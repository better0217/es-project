# 文件路径: 12345-es-project/docker-compose.yml

version: '3.8'

services:
  # 1. MySQL数据库 (已配置自动化初始化脚本)
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    platform: linux/amd64
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=your_root_password
      - MYSQL_DATABASE=workorders
      - MYSQL_USER=your_user
      - MYSQL_PASSWORD=your_password
    volumes:
      - mysql_data:/var/lib/mysql
      # 【关键修改】将我们的脚本文件夹挂载到MySQL容器的初始化目录
      - ./mysql-init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-net

  # 2. RabbitMQ - 消息中间件
  rabbitmq:
    image: rabbitmq:3.10-management
    container_name: rabbitmq-server
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-net

  # 3. Elasticsearch 集群 (使用自定义构建的镜像)
  # 节点1: Master + Data
  es-master-data:
    build: . # <--- 【关键修改】使用Dockerfile构建镜像
    container_name: es-node-1
    environment:
      - node.name=es-node-1
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es-node-1,es-data-1,es-data-2
      - cluster.initial_master_nodes=es-node-1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data_1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-net

  # 节点2: Data Only
  es-data-1:
    build: . # <--- 【关键修改】使用Dockerfile构建镜像
    container_name: es-node-2
    environment:
      - node.name=es-node-2
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es-node-1,es-data-1,es-data-2
      - cluster.initial_master_nodes=es-node-1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data_2:/usr/share/elasticsearch/data
    networks:
      - app-net

  # 节点3: Data Only
  es-data-2:
    build: . # <--- 【关键修改】使用Dockerfile构建镜像
    container_name: es-node-3
    environment:
      - node.name=es-node-3
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es-node-1,es-data-1,es-data-2
      - cluster.initial_master_nodes=es-node-1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data_3:/usr/share/elasticsearch/data
    networks:
      - app-net

  # 4. Kibana - 可视化工具
  kibana:
    image: kibana:8.6.2
    container_name: kibana-ui
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://es-node-1:9200
    depends_on:
      - es-master-data
    networks:
      - app-net

# 定义数据卷，用于持久化存储
volumes:
  mysql_data:
  rabbitmq_data:
  es_data_1:
  es_data_2:
  es_data_3:

# 定义网络，让所有容器可以互相通信
networks:
  app-net:
    driver: bridge